Laboratorio 1

1.2 Gestión y manipulación de archivos
Esta parte está enfocada a explorar diferentes comandos del Shell y ver su efecto.
##############################################################################################################
1) Crear una carpeta llamada AS en vuestro directorio raíz de usuario.

  mkdir AS
##############################################################################################################
2) Entrar dentro de la carpeta y comprobar que el directorio coincide con el contenido de la variable de entorno
   PWD.
  cd AS/  ; Entramos dentro de la carpeta
  pwd
  /home/dmarta14/AS ; Comprobación
##############################################################################################################
3) Instalar cal con el comando apt install ncal. Utilizar cal para mostrar un calendario y redirigir la salida a un
   fichero de texto. Comprobar que ese fichero se crea correctamente y que su contenido es el esperado.

  sudo apt install ncal
  cal 10 2023 ;Creamos un calendario en este casa del mes de octubre
  cal 10 2023 > calendarioOctubre2023.txt ; Redirigimos el calendario a un fichero .txt

  cat calendarioOctubre2023.txt ;Comprobamos que el fichero se crea correctamente y su contenido es el esperado
##############################################################################################################
  October 2023      
  Su Mo Tu We Th Fr Sa  
   1  2  3  4  5  6  7  
   8  9 10 11 12 13 14              ;Resultado
  15 16 17 18 19 20 21  
  22 23 24 25 26 27 28  
  29 30 31 
##############################################################################################################
4)Copiar el fichero recién creado al directorio raíz del usuario.

  cp /home/dmarta14/AS/calendarioOctubre2023.txt /home/dmarta14/ ;comando para copiar un fichero


##############################################################################################################
5) Moverse al directorio raíz del usuario y listar en formato extendido (parámetro -l) los directorios y archivos
  presentes. Redirigir esa información a un fichero.

  cd           ; Nos movemos al directorio raiz
  ls -l        ; Comando para listar los directorios en formato extendido
  ls -l > listacomandos.txt  ;Redirigimos la información a un fichero 
  cat listacomandos.txt ;Comprobamos que la ha realizado correctamente

##############################################################################################################
6) Listar los 5 ficheros más nuevos de la carpeta /etc (que no sean carpetas).

  sudo find /etc -type f -exec ls -lt {} + | head -5

##############################################################################################################
7) Cambiar los permisos del fichero creado con información del calendario para que sólo el usuario propietario
   tenga capacidad de leer y escribir.

  chmod -rw  calendarioOctubre2023.txt 

##############################################################################################################
8) Cambiar permisos para evitar que ningún otro usuario pueda acceder nuestro directorio raíz.

  chmod 700 /home/dmarta14/
##############################################################################################################
9) Comprobar cuántos usuarios hay en el sistema y cual es el nuestro Shell de inicio.

  sudo cat /etc/passwd | wc -l
  echo $SHELL
  grep dmarta14 /etc/passwd
##############################################################################################################
10) Comprobar cuándo y desde donde accediste la última vez al sistema.

  last
##############################################################################################################
11)Comprimir en un archivo .tar.gz los contenidos del directorio $HOME. Descomprimirlos /tmp y comprobar
que se ha hecho correctamente.

 tar -czvf backuphome.tar.gz $HOME ;Comprime lo que hay en el directorio HOME
 tar -xzvf backuphome.tar.gz -C /tmp ;Descomprime el archivo en el directorio /tmp
##############################################################################################################
12) Como usuario “root”, buscar todos los archivos que sean propiedad de tu usuario en el sistema (desde el
directorio raíz /) y listarlos en forma extendida (con toda la información).

  sudo find / -user dmarta14 -exec ls -l {} \;

##############################################################################################################
13)Como usuario “root”, mostrar las últimas 30 líneas de /var/log/syslog.

  tail -n 50 /var/log/syslog


##############################################################################################################

##############################################################################################################

2 Shell Scripting

##############################################################################################################

1) Crear un script llamado lsdirs.sh que muestre los directorios contenidos en el directorio actual.

  nano lsdirs.sh

;Dentro del nano lsdirs.sh
  #!/bin/bash

  ls -d */    ;Comando para listar los directorios que contiene el directorio actual

chmod +x lsdirs.sh       ;Le damos permisos para que ejecute el .sh
./lsdirs.sh              ;Ejecutamos el script

##############################################################################################################
2) Crear un script llamado see.sh que reciba un nombre de fichero/directorio como parámetro. Si el nombre
corresponde a un fichero, el script muestra el contenido del fichero con more, sino muestra el contenido del
directorio con ls.

  nano see.sh
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  !/bin/bash                                                               ;         
;  
;  if [ $# -ne 1 ]; then                                                    ;
;      echo "Uso: $0 <nombre_de_fichero_o_directorio>"                      ;
;      exit 1                                                               ; 
;  fi                                                                       ;
;                                                                           ; 
;                                                                           ;          ;El script
;  if [ -d "$1" ] ; then                                                    ;
;          ls -l "$1"                                                       ;
;  elif [ -f "$1" ]; then                                                   ;
;          more "$1"                                                        ;
;  else
;          echo "No corresponde el nombre con ningún fichero/directorio"    ;
;  fi                                                                       ; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

chmod +x see.sh ;Damos permisos para la ejecución

./see.sh compartir ;Ejecutamos con un parámetro en este caso un directorio


##############################################################################################################
3) Crear un script que pida al usuario que teclee una palabra y escriba por pantalla el número de caracteres de
esa palabra.

nano  recogida.sh

#!/bin/bash 


read -p "Introduzca una palabra " palabra

longitud=${#palabra}

echo "La palabra '$palabra' tiene '$longitud' caracteres"


chmod +x recogida.sh
./recogida.sh

##############################################################################################################
4) Crear un script que pida al usuario que teclee una palabra y compruebe si es un comando del sistema o no.

  nano comando.sh

  #!/bin/bash

# Solicitar al usuario que ingrese una palabra
read -p "Por favor, ingrese una palabra: " palabra

# Comprobar si la palabra es un comando del sistema
if type "$palabra" &> /dev/null; then
    echo "'$palabra' es un comando del sistema."
else
    echo "'$palabra' no es un comando del sistema."
fi

chmod +x comando.sh
./comando.sh
##############################################################################################################
5) Crear un script que cree una carpeta llamada cosas y después cree 100 ficheros vacíos llamados
fich<numero>.txt dentro de ella, donde <numero> es un número entre 0 y 99.

  nano crearficheros.sh

  #!/bin/bash

  mkdir cosas
  cd cosas

  for i in {0..99}; do
        touch fichero"$i".txt;
  done

  chmod +x crearficheros.sh
  ./crearficheros.sh

##############################################################################################################
6) Extender el script anterior para que cada fichero contenga la N-sima línea del manual de ls (man ls). El fichero
fich0.txt tendrá la línea 0 del manual, fich1.txt tendrá la línea 1 del manual, 

#!/bin/bash

if [ ! -d "cosas" ]; then
    mkdir cosas
fi
cd cosas

man ls | head -n 100 > manual_ls_temp.txt

for i in {0..99}; do
        sed -n '${i}p' manual_ls_temp.txt > "fichero$i.txt"
done
rm manual_ls_temp.txt

##############################################################################################################
7) Crear un script que modifique la extensión de todos los ficheros .txt de un directorio a .t.

nano cambiarextension.sh

#!/bin/bash

directorio="/home/dmarta14/cosas"


for archivo in "$directorio"/*.txt; do
    nuevo_nombre="${archivo%.txt}.t"
    mv "$archivo" "$nuevo_nombre"
done

chmod +x cambiarextension.sh
./cambiarextension.sh

##############################################################################################################
8) Crear un script borra.sh que reciba un número indefinido de parámetros (de 0 a 9) y borre el fichero
correspondiente a la suma del valor de los parámetros que reciba. Por ejemplo, borra.sh 1 4 5 9, borraría el
fichero fich19.txt (1 + 4 + 5 + 9 = 19).


nano borrar.sh

#!/bin/bash

# Verificar si se proporciona al menos un parámetro
if [ $# -eq 0 ]; then
    echo "Uso: $0 <número1> <número2> ... <númeroN>"
    exit 1
fi

suma=0
for i in $@ ; do
        suma=$(( suma + i))
done

echo "la suma total es: $suma "
echo "Por lo tanto se borra el fichero$suma.t"
cd cosas

if [ -e fichero$suma.t ] ; then 
        rm fichero$suma.t
else
        echo "No existe ningun fichero con ese número"
fi


chmod +x borrar.sh
./borrar.sh 1 2 3 4 5 

##############################################################################################################
9) Crear un script orden.sh que muestre el contenido del fichero /etc/passwd ordenado por nombre de usuario,
UID o GID. El script recibirá un parámetro que indique cuál de los 3 utilizar como clave de ordenación.

  nano orden.sh

#!/bin/bash

if [ $# -eq 0 ]; then 

        echo "./orden.sh <nombre-usuario>/<GID>/<UID>"
        exit 1
fi

# Parámetro que indica cómo ordenar
clave_ordenacion="$1"

# Verificar que el parámetro es válido
if [ "$clave_ordenacion" != "nombre" ] && [ "$clave_ordenacion" != "uid" ] && [ "$clave_ordenacion" != ">
    echo "El parámetro debe ser 'nombre', 'uid' o 'gid'."
    exit 1
fi

# Mostrar el contenido del archivo /etc/passwd ordenado según el parámetro
case "$clave_ordenacion" in
    "nombre")
        sort -t: -k1 /etc/passwd
        ;;
    "uid")
        sort -t: -n -k3 /etc/passwd
        ;;
    "gid")
        sort -t: -n -k4 /etc/passwd
        ;;
esac

chmod +x orden.sh
./orden.sh

##############################################################################################################
10) Imagina que quieres mandar un e-mail con el mismo cuerpo a varios destinatarios, pero personalizando la
primera línea con el nombre de cada uno. Crear un fichero cuerpo.txt con el texto del cuerpo del e-mail y la
palabra NOMBRE en cada lugar donde querrías poner el nombre, y un fichero nombres.txt con varios
nombres personales. Crear un script que genere varios ficheros con el cuerpo del e-mail personalizado para
cada destinatario.

cuerpo.txt
Hola NOMBRE,

Gracias por tu interés en nuestro producto. Esperamos que estés teniendo un buen día.

Atentamente,
[Nombre de la Empresa]

nombres.txt
Juan
María
Carlos
Luisa


generarcorreos.sh
#!/bin/bash

# Verificar si los archivos cuerpo.txt y nombres.txt existen
if [ ! -f "cuerpo.txt" ] || [ ! -f "nombres.txt" ]; then
    echo "Los archivos cuerpo.txt y/o nombres.txt no existen."
    exit 1
fi

# Contador para nombres
contador=0

# Leer cada nombre de nombres.txt
while IFS= read -r nombre
do
  # Crear un archivo de correo personalizado para cada destinatario
  archivo_salida="correo_$contador.txt"
  contador=$((contador + 1))
  
  # Sustituir "NOMBRE" en cuerpo.txt con el nombre actual y guardar en el archivo de salida
  sed "s/NOMBRE/$nombre/g" cuerpo.txt > "$archivo_salida"
  
  echo "Se ha creado $archivo_salida."
done < "nombres.txt"

chmod +x generarcorreos.sh
./generacorreos.sh



##############################################################################################################











